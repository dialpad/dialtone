name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - alpha
      - beta
      - legacy
      - next
      - production
      - staging

    paths:
      - 'packages/**'
      - 'apps/**'

env:
  HUSKY: 0

jobs:
  cache-and-install:
    if: ${{ false }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  filter-actions:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      dialtone: ${{ steps.filter.outputs.dialtone }}
      dialtone-vue: ${{ steps.filter.outputs.dialtone-vue }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Filter actions by path
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            dialtone:
              - 'apps/dialtone-documentation/**'
              - 'packages/**'
            dialtone-vue:
              - 'apps/dialtone-vue3-documentation/**'
              - 'packages/**'

  get-branch-name:
    runs-on: ubuntu-latest
    outputs:
      current_branch: ${{ steps.branch-name.outputs.current_branch }}
    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v7

  check-dialpad-member:
    runs-on: ubuntu-latest
    steps:
    # Will prevent the rest of the steps from running on fail
    - name: Check if user is a dialpad member
      uses: octokit/request-action@v2.x
      with:
        route: GET /orgs/dialpad/members/${{ github.actor }}
      env:
        GITHUB_TOKEN: ${{ secrets.DIALTONE_CI_TOKEN }}

  deploy-dialtone:
    needs: [check-dialpad-member, get-branch-name, filter-actions]
    if: ${{ needs.filter-actions.outputs.dialtone == 'true' }}
    concurrency: ${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      VUEPRESS_BASE_URL: ${{ github.ref == 'refs/heads/production' && '/' || format('/{0}/', needs.get-branch-name.outputs.current_branch) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Dialtone library and documentation site
        run: npx nx run --verbose dialtone-documentation:build

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.DIALTONE_GCP_WIP }}
          service_account: ${{ secrets.DIALTONE_GCP_SA }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 363.0.0'

      - name: List bucket contents
        run: gcloud storage ls gs://dialtone.dialpad.com

#      - name: Clean up bucket
#        if: ${{ github.ref == 'refs/heads/production' }}
#        run: >
#          gcloud storage ls gs://dialtone.dialpad.com |
#          grep -v -E '
#          /alpha/|
#          /beta/|
#          /legacy/|
#          /next/|
#          /deploy-previews/|
#          /vue/|
#          /vue3/|
#          /staging/
#          ' |
#          gcloud storage rm --recursive --read-paths-from-stdin
#
#      - name: Clean up bucket ${{ env.VUEPRESS_BASE_URL }} directory
#        if: ${{ github.ref != 'refs/heads/production' }}
#        run: gcloud storage rm --recursive ${{ format('gs://dialtone.dialpad.com{0}', env.VUEPRESS_BASE_URL) }}
#
#      - name: Upload to GCP
#        uses: google-github-actions/upload-cloud-storage@v1
#        with:
#          path: apps/dialtone-documentation/docs/.vuepress/dist
#          destination: ${{ format('dialtone.dialpad.com{0}', env.VUEPRESS_BASE_URL) }}
#          parent: false

#  deploy-dialtone-vue:
#    needs: cache-and-install
#    if: ${{ needs.cache-and-install.outputs.dialtone-vue == 'true' }}
#    concurrency: ${{ github.workflow }}-${{ github.ref }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Build Dialtone Vue library and docsite
#        run: npx nx run --verbose dialtone-vue3-documentation:build
#
#      - name: Deploy Dialtone Vue to GitHub Pages
#        uses: JamesIves/github-pages-deploy-action@v4.2.5
#        with:
#          branch: gh-pages
#          folder: apps/dialtone-vue3-documentation/storybook-static
#          target-folder: ${{ steps.branch-name.outputs.current_branch }}