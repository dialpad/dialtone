name: Release packages

on:
  workflow_dispatch:
    inputs:
      package:
        type: 'choice'
        required: true
        description: 'Select a package to run the release'
        options:
          - all
          - dialtone
          - css
          - emojis
          - icons
          - tokens
          - vue2
          - vue3
          - eslint-plugin
          - stylelint-plugin
  schedule:
    - cron: "0 10 * * 2"

env:
  HUSKY: 0

jobs:
  get-branch-name:
    runs-on: ubuntu-latest
    outputs:
      current_branch: ${{ steps.branch-name.outputs.current_branch }}
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8

  check-dialpad-member:
    runs-on: ubuntu-latest
    steps:
      # Will prevent the rest of the steps from running on fail
      - name: Check if user is a dialpad member
        uses: octokit/request-action@v2.x
        with:
          route: GET /orgs/dialpad/members/${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.DIALTONE_CI_TOKEN }}

  release:
    needs: [get-branch-name, check-dialpad-member]
    if: ${{ contains(fromJSON('["staging", "alpha", "beta"]'), needs.get-branch-name.outputs.current_branch) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    env:
      RELEASE_TAG: ${{ needs.get-branch-name.outputs.current_branch == 'staging' && 'latest' || needs.get-branch-name.outputs.current_branch }}
      DIALTONE_RELEASE_TAG: ${{ needs.get-branch-name.outputs.current_branch == 'staging' && 'next' || needs.get-branch-name.outputs.current_branch }}
      DIALTONE_VUE3_RELEASE_TAG: ${{ needs.get-branch-name.outputs.current_branch == 'staging' && 'vue3' || needs.get-branch-name.outputs.current_branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.DIALTONE_CI_TOKEN }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Use pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Release to GitHub
      - name: Release dialtone ${{ env.DIALTONE_RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'dialtone' }}
        run: pnpm nx run dialtone:release

      - name: Release dialtone css ${{ env.RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'css' }}
        run: pnpm nx run dialtone-css:release

      - name: Release dialtone emojis ${{ env.RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'emojis' }}
        run: pnpm nx run dialtone-emojis:release

      - name: Release dialtone icons ${{ env.RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'icons' }}
        run: pnpm nx run dialtone-icons:release

      - name: Release dialtone tokens ${{ env.RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'tokens' }}
        run: pnpm nx run dialtone-tokens:release

      - name: Release dialtone-vue@${{ env.RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'vue2' }}
        run: pnpm nx run dialtone-vue2:release

      - name: Release dialtone-vue@${{ env.DIALTONE_VUE3_RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'vue3' }}
        run: pnpm nx run dialtone-vue3:release

      - name: Release Dialtone eslint plugin ${{ env.RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'eslint-plugin' }}
        run: pnpm nx run eslint-plugin-dialtone:release

      - name: Release Dialtone stylelint plugin ${{ env.RELEASE_TAG }}
        if: ${{ github.event_name == 'schedule' || github.event.inputs.package == 'all' || github.event.inputs.package == 'stylelint-plugin' }}
        run: pnpm nx run stylelint-plugin-dialtone:release

  push:
    needs: [ release ]
    if: ${{ needs.get-branch-name.outputs.current_branch == 'staging' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'production'
          token: ${{ secrets.DIALTONE_CI_TOKEN }}

      - name: Merge changes to production
        run: |
          git config --global user.name 'Eng Bot'
          git config --global user.email 'engbot@dialpad.com'
          git merge --ff-only staging
          git push
