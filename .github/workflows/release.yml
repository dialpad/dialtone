name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - production
      - alpha
      - beta
      - next

env:
  HUSKY: 0

jobs:
  get-branch-name:
    runs-on: ubuntu-latest
    outputs:
      current_branch: ${{ steps.branch-name.outputs.current_branch }}
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7.0.7
  check-dialpad-member:
    runs-on: ubuntu-latest
    steps:
      # Will prevent the rest of the steps from running on fail
      - name: Check if user is a dialpad member
        uses: octokit/request-action@v2.x
        with:
          route: GET /orgs/dialpad/members/${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.DIALTONE_CI_TOKEN }}
  npm:
    needs: [get-branch-name, check-dialpad-member]
    concurrency: ${{ github.workflow }}-${{ github.ref }}-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set npm token
        run: npm config set //registry.npmjs.org/:_authToken=${{ secrets.DIALTONE_NPM_TOKEN }}

      # note that pnpm run build is executed before publishing via prepublishOnly
      - name: Publish production
        if: ${{ github.ref == 'refs/heads/production' }}
        continue-on-error: true
        run: pnpm nx run-many --target=release --parallel=false

      - name: Publish pre-release
        if: ${{ github.ref != 'refs/heads/production' }}
        continue-on-error: true
        run: pnpm nx run-many --target=release --parallel=false --tag ${{ needs.get-branch-name.outputs.current_branch }}

      - name: Set registry to GitHub packages
        run: npm config set @dialpad:registry https://npm.pkg.github.com

      - name: Set GitHub auth token
        run: npm config set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}

      # note that pnpm run build is executed before publishing via prepublishOnly
      - name: Publish production to GitHub packages
        if: ${{ github.ref == 'refs/heads/production' }}
        continue-on-error: true
        run: pnpm nx run-many --target=release --parallel=false

      - name: Publish pre-release to GitHub packages
        if: ${{ github.ref != 'refs/heads/production' }}
        continue-on-error: true
        run: pnpm nx run-many --target=release --parallel=false --tag ${{ needs.get-branch-name.outputs.current_branch }}

      - name: Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm nx run-many --target=release-github --parallel=false

  android:
    needs: check-dialpad-member
    if: ${{ github.ref == 'refs/heads/production' }}
    concurrency: ${{ github.workflow }}-${{ github.ref }}-android
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: |
            packages/dialtone-tokens/*.gradle*
            packages/dialtone-tokens/**/gradle-wrapper.properties

      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build android
        run: pnpm nx run dialtone-tokens:publish:android-package

      - name: Publish production - Gradle
        working-directory: ./packages/dialtone-tokens
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: braddialpad

  swift:
    needs: check-dialpad-member
    if: ${{ github.ref == 'refs/heads/production' }}
    concurrency: ${{ github.workflow }}-${{ github.ref }}-swift
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build swift
        run: pnpm nx run dialtone-tokens:publish:ios-package

      - name: Publish production - Swift
        uses: cpina/github-action-push-to-another-repository@v1.5.1
        env:
          API_TOKEN_GITHUB: ${{ secrets.DIALTONE_CI_TOKEN }}
        with:
          user-email: 'dialtone@dialpad.com'
          source-directory: 'packages/dialtone-tokens/dist_ios'
          destination-repository-name: 'dialtone-tokens-swift'
          destination-github-username: 'dialpad'
          commit-message: "dialtone-tokens-swift release"
