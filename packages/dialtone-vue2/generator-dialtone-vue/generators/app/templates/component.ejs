<template>
  <div>
    <div>
      {{ genericProp }}
    </div>
    <div>
      <!-- @slot description of the default slot -->
      <slot>
        The default slot
      </slot>
    </div>
    <div>
      <!-- @slot description of the named slot -->
      <slot name="namedSlot" />
    </div>
    <button @click="$emit('generic-event')">Click to fire generic-event</button>
  </div>
</template>

<script>
import {} from './<%= fileName %>_constants';

export default {
  name: '<%= componentName %>',

  components: {},

  mixins: [],

  /* inheritAttrs: false is generally an option we want to set on library
    components. This allows any attributes passed in that are not recognized
    as props to be passed down to another element or component using v-bind:$attrs
    more info: https://vuejs.org/v2/api/#inheritAttrs */
  // inheritAttrs: false,

  props: {
    /**
     * description of this generic prop
     */
    genericProp: {
      type: String,
      default: 'a generic prop'
    }
  },

  emits: [
    /**
     * Event fired when something happens
     *
     * @event generic-event
     * @type {Boolean}
     */
    'generic-event'
  ],

  data () {
    return {};
  },

  computed: {},

  watch: {},

  methods: {},
};
</script>

<style lang="less">

</style>
